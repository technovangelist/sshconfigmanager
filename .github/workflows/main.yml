name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build for macOS
    runs-on: macOS-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Deno
        uses: denoland/setup-deno@main
        with:
          deno-version: v1.32.1

      - name: Install dependencies
        run: deno cache --unstable main.ts

      - name: Build and package
        run: deno compile --unstable --allow-env --allow-read --allow-write --target aarch64-apple-darwin --output dist/app-aarch64-apple-darwin main.ts

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-aarch64-apple-darwin
          path: dist/
      - name: List contents of dist directory
        run: ls -laR dist
          
    env:
      ELECTRON_CACHE: macOS-latest-electron-cache
      ELECTRON_BUILDER_CACHE: macOS-latest-electron-builder-cache

  release:
    name: Create Release
    needs: build
    runs-on: macOS-latest
    permissions: write-all
    
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      RELEASE_TAG_PREFIX: "v"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get short SHA
        id: get_short_sha
        run: echo "::set-output name=SHORT_SHA::$(echo ${GITHUB_SHA} | cut -c1-7)"
        shell: bash
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: app-aarch64-apple-darwin
          path: dist/
      - name: Create Release
        
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.RELEASE_TAG_PREFIX }}-${{ steps.get_short_sha.outputs.SHORT_SHA }}
          release_name: Release ${{ steps.get_short_sha.outputs.SHORT_SHA }}
          body: |
            Changes in this release:
            - Update dependency X to version Y
          draft: false
          prerelease: false
      - name: List contents of dist directory
        run: ls -laR dist

      - name: Upload macOS Apple Silicon asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/app-aarch64-apple-darwin
          asset_name: app-aarch64-apple-darwin
          asset_content_type: application/octet-stream
    
